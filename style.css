/*
 * Base styles to approximate the look of the provided reference image.
 * The page uses a dark background with tiny stars sprinkled throughout,
 * a large serif headline, two-line tagline, and a central blob that
 * gently pulses like a heartbeat.
 */

html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: 'Playfair Display', serif;
  color: #ffffff;
  background-color: #01050c; /* nearly black background, subtle blue tint */
  overflow: hidden;
}

/* Container for the randomly positioned stars.  The stars themselves are
   injected into this element via JavaScript in script.js. */
#star-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  overflow: hidden;
}

/* A star element.  Stars are generated via JS with random positions,
   sizes and animation delays for a natural look. */
.star {
  position: absolute;
  background-color: rgba(255, 255, 255, 0.9);
  border-radius: 50%;
  animation: twinkle 4s infinite ease-in-out;
}

/* Twinkling animation for stars: they fade in and out gently. */
@keyframes twinkle {
  0%, 100% { opacity: 0.4; }
  50% { opacity: 1; }
}

/* Content container ensures text and blob stay centred both vertically
   and horizontally. */
.content {
  position: relative;
  z-index: 1;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 0 1rem;
}

/* Main heading styling.  Large serif text reminiscent of the original
   artwork. */
.title {
  font-size: 6rem;
  font-weight: 700;
  letter-spacing: 0.1em;
  margin: 0;
  text-shadow: 0 0 20px rgba(255, 255, 255, 0.3);
}

/* Tagline styling: two separate lines, slightly smaller than the title. */
.tagline p {
  margin: 0;
  font-size: 1.6rem;
  line-height: 1.5;
  text-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
}

/* Clickable container for the blob.  Without this wrapper the blob
   wouldn't be a proper anchor element. */
.blob-link {
  margin-top: 3rem;
  display: inline-block;
  cursor: pointer;
}

/* The central blob.  The border-radius values create an irregular
   organic shape similar to the reference image.  An inset shadow
   provides a subtle threeâ€‘dimensional highlight.  Pulsation is
   achieved via CSS animation defined below. */
.blob {
  width: 200px;
  height: 200px;
  background-color: #ffffff;
  /* Create an irregular organic shape by specifying asymmetric border radii.
     Each slash-separated pair controls the x and y radii independently. */
  /* Use highly asymmetric radii to create a more organic blob shape. */
  border-radius: 60% 30% 70% 50% / 50% 40% 60% 70%;
  box-shadow: 0 0 60px rgba(255, 255, 255, 0.35),
              inset -10px -10px 30px rgba(255, 255, 255, 0.8),
              inset 10px 10px 30px rgba(255, 255, 255, 0.6);
  animation: pulsate 1.6s infinite ease-in-out;
  transform-origin: center;
}

/* Pulsating animation: scales up and down to simulate a heartbeat. */
@keyframes pulsate {
  0%, 100% {
    transform: scale(1);
  }
  30% {
    transform: scale(1.05);
  }
  60% {
    transform: scale(0.98);
  }
}

/* Responsive adjustments for smaller screens */
@media (max-width: 768px) {
  .title {
    font-size: 4rem;
  }
  .tagline p {
    font-size: 1.2rem;
  }
  .blob {
    width: 150px;
    height: 150px;
  }
}