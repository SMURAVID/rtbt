/*
 * Base styles to approximate the look of the provided reference image.
 * The page uses a dark background with tiny stars sprinkled throughout,
 * a large serif headline, two-line tagline, and a central blob that
 * gently pulses like a heartbeat.
 */

html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
  /* Use a modern sans‑serif font throughout the page */
  font-family: 'Montserrat', sans-serif;
  color: #ffffff;
  background-color: #01050c; /* nearly black background, subtle blue tint */
  overflow: hidden;
}

/* Container for the randomly positioned stars.  The stars themselves are
   injected into this element via JavaScript in script.js. */
#star-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  overflow: hidden;
}

/* A star element.  Stars are generated via JS with random positions,
   sizes and animation delays for a natural look. */
.star {
  position: absolute;
  background-color: rgba(255, 255, 255, 0.9);
  border-radius: 50%;
  animation: twinkle 4s infinite ease-in-out;
}

/* Twinkling animation for stars: they fade in and out gently. */
@keyframes twinkle {
  0%, 100% { opacity: 0.4; }
  50% { opacity: 1; }
}

/* Content container ensures text and blob stay centred both vertically
   and horizontally. */
.content {
  position: relative;
  z-index: 1;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 0 1rem;
  /* Hidden by default; becomes visible when the visitor starts the
     experience via JavaScript */
  display: none;
}

/* Main heading styling.  Large serif text reminiscent of the original
   artwork. */
.title {
  font-size: 6rem;
  font-weight: 700;
  letter-spacing: 0.1em;
  margin: 0;
  text-shadow: 0 0 20px rgba(255, 255, 255, 0.3);
}

/* Tagline styling: two separate lines, slightly smaller than the title. */
/* Single-line tagline styling.  Smaller and subtler than the title. */
.tagline {
  margin: 0.5rem 0 0;
  font-size: 1rem;
  line-height: 1.3;
  font-weight: 400;
  color: rgba(255, 255, 255, 0.7);
  text-shadow: 0 0 5px rgba(255, 255, 255, 0.1);
  white-space: nowrap;
}

/* Clickable container for the blob.  Without this wrapper the blob
   wouldn't be a proper anchor element. */
.blob-link {
  margin-top: 3rem;
  display: inline-block;
  cursor: pointer;
}

/* The central blob.  The border-radius values create an irregular
   organic shape similar to the reference image.  An inset shadow
   provides a subtle three‑dimensional highlight.  Pulsation is
   achieved via CSS animation defined below. */
.blob {
  width: 200px;
  height: 200px;
  background-color: #ffffff;
  /* Create an irregular organic shape by specifying asymmetric border radii.
     Each slash-separated pair controls the x and y radii independently. */
  /* Use highly asymmetric radii to create a more organic blob shape. */
  border-radius: 60% 30% 70% 50% / 50% 40% 60% 70%;
  box-shadow: 0 0 60px rgba(255, 255, 255, 0.35),
              inset -10px -10px 30px rgba(255, 255, 255, 0.8),
              inset 10px 10px 30px rgba(255, 255, 255, 0.6);
  /* Combine two animations: a subtle heartbeat scale and a gentle morphing
     of the blob's shape over time to simulate a gooey wobble.  The
     pulsate animation has a long duration and small amplitude; the
     blobMorph animation alters the border-radius values to create
     movement without excessive scaling. */
  animation: pulsate 4s infinite ease-in-out, blobMorph 8s infinite ease-in-out;
  transform-origin: center;
}

/* Pulsating animation: scales up and down to simulate a heartbeat. */
@keyframes pulsate {
  0%, 100% {
    transform: scale(1);
  }
  /* Slightly enlarge at 25% to mimic heartbeat */
  25% {
    transform: scale(1.03);
  }
  /* Slightly contract at 55% for the beat return */
  55% {
    transform: scale(0.97);
  }
}

/* Morphing animation for the blob.  It smoothly changes the
   border-radius values over time to create a jelly-like wobble. */
@keyframes blobMorph {
  0%, 100% {
    border-radius: 60% 30% 70% 50% / 50% 40% 60% 70%;
  }
  33% {
    border-radius: 50% 60% 40% 70% / 60% 50% 65% 40%;
  }
  66% {
    border-radius: 70% 40% 55% 35% / 45% 65% 50% 60%;
  }
}

/* Responsive adjustments for smaller screens */
@media (max-width: 768px) {
  .title {
    font-size: 4rem;
  }
  .tagline {
    font-size: 0.9rem;
    white-space: normal; /* allow wrapping on small screens */
  }
  .blob {
    width: 150px;
    height: 150px;
  }
}

/*
 * Overlay that appears on initial page load.  It covers the entire
 * viewport with a slightly opaque dark background.  The inner
 * container holds the prompt text, email input, start button and
 * privacy notice.
 */
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(1, 5, 12, 0.95);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2;
}

.overlay-container {
  background: rgba(0, 0, 0, 0.5);
  padding: 2rem;
  border-radius: 12px;
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.4);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  width: 90%;
  max-width: 350px;
  text-align: center;
}

.overlay-text {
  font-size: 1.2rem;
  line-height: 1.4;
}

.email-input {
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 1rem;
  border-radius: 8px;
  border: none;
  outline: none;
  background-color: rgba(255, 255, 255, 0.9);
  color: #01050c;
  transition: box-shadow 0.3s ease;
}

/* Highlight the email field when an invalid submission occurs */
.input-error {
  box-shadow: 0 0 0 2px #ff4d4d;
}

.start-button {
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 1rem;
  border-radius: 8px;
  border: none;
  cursor: pointer;
  background-color: #ffffff;
  color: #01050c;
  font-weight: 600;
  transition: background-color 0.3s ease;
}

.start-button:hover {
  background-color: #e5e5e5;
}

.privacy {
  font-size: 0.7rem;
  opacity: 0.6;
  margin-top: 0.5rem;
  color: #ffffff;
}